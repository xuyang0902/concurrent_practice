每天学习一点设计模式


设计模式目的：为了可重用代码，保证代码的可靠性，更容易被他人理解。
设计模式的六大原则：
总原则：开闭原则，即对扩展开放，对修改关闭。
1 单一职责原则：每个类应该实现单一的职责，否则应该把类拆分。
2 里氏替换原则：任何基类可以出现的地方，子类一定可以出现。它是继承复用的基石，只有当衍生类可以替换掉基类，
              软件单位的功能不受影响时，基类才能真正被复用，而衍生类也能够在基类的基础上增加新的行为。
3 依赖倒转原则：这是开闭原则的基础，对接口编程，依赖于抽象而不依赖于具体。
4 接口隔离原则：使用多个隔离的接口，比使用单个接口要好。每个接口不存在子类用不到却必须实现的方法，否则要将接口拆分。
5 迪米特法则（最少知道原则）：一个实体应当尽量少的与其他实体之间发生相互作用，使得系统的功能模块相对独立。
6 合成复用原则：尽量使用合成/聚合方式，而不是使用继承。


  模式可以分成3类：创建型、行为型和结构型。

    创建型模式
    创建型模式涉及对象的实例化，特点是不让用户代码依赖于对象的创建或排列方式，避免用户直接使用new创建对象。

    创建型模式有以下5个：

    工厂方法模式、抽象工厂方法模式、生成器模式、原型模式和单例模式。

    行为型模式
    行为型模式涉及怎样合理的设计对象之间的交互通信，以及怎样合理为对象分配职责，让设计富有弹性，易维护，易复用。

    行为型模式有以下11个：

    责任链模式、命令模式、解释器模式、迭代器模式、中介者模式、备忘录模式、观察者模式、状态模式、策略模式、模板方法模式和访问者模式。

    结构型模式
    结构型模式涉及如何组合类和对象以形成更大的结构，和类有关的结构型模式涉及如何合理使用继承机制；和对象有关的结构型模式涉及如何合理的使用对象组合机制。

    结构型模式有以下7个：

    适配器模式、组合模式、代理模式、享元模式、外观模式、桥接模式和装饰模式。